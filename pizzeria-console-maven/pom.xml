<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>dta</groupId>
  <artifactId>pizzeria-console-maven</artifactId>
  <version>1.0</version>
  <packaging>pom</packaging>
  
  <modules>
  	<module>pizzeria-ihm</module> <!-- nom du répertoir pas l'artifact id -->
  	<module>pizzeria-model</module>
  	<module>pizzeria-service</module>
  	<module>pizzeria-admin-web</module>
  </modules>
  
  <!--  on peut declarer des variables personalisées  -->
  <properties>
   	<reflections.version>0.9.10</reflections.version>
   	<commons.lang3.version>3.4</commons.lang3.version>
   	<shade>2.4.3</shade>
   	<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
  </properties>
  
  <dependencyManagement>
  
	<dependencies>
	
		<dependency>
			<groupId>${project.groupId}</groupId>
			<artifactId>pizzeria-model</artifactId>
			<version>${project.version}</version>
	  <!--  <scope></scope> pas besoin c compile par default-->
		</dependency>
		
		<dependency>
			<groupId>${project.groupId}</groupId>
			<artifactId>pizzeria-service</artifactId>
			<version>${project.version}</version>
	  <!--  <scope></scope> pas besoin c compile par default-->
		</dependency>
		
		<!-- pas obliger de metre ihm en dependance parce que on l'appel null part alors que modèle est appler par service et service est appler par ihm -->
		<!--  <dependency>
			<groupId>${project.groupId}</groupId>
			<artifactId>pizzeria-ihm</artifactId>
			<version>${projet.version}</version>
			</dependency> -->
	  <!--  <scope></scope> pas besoin c compile par default-->
		
		
		<dependency>
        	<groupId>org.apache.commons</groupId>
        	<artifactId>commons-lang3</artifactId>
        	<version>${commons.lang3.version}</version>
        </dependency>
            
        <dependency>
      		<groupId>org.reflections</groupId>
        	<artifactId>reflections</artifactId>
           	<version>${reflections.version}</version>
     	</dependency>
     	
     	<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.12</version>
			<scope>test</scope>
			
		</dependency>
		
		<dependency>
   			<groupId>mysql</groupId>
  			<artifactId>mysql-connector-java</artifactId>
    		<version>5.1.39</version>
    		<scope>runtime</scope>
		</dependency>
		
		<dependency>
   			<groupId>org.hibernate.javax.persistence</groupId>
    		<artifactId>hibernate-jpa-2.1-api</artifactId>
    		<version>1.0.0.Final</version>
    		<scope>provided</scope> <!-- facultatif car compile par défault -->
		</dependency>
		
		<dependency>
    		<groupId>org.hibernate</groupId>
    		<artifactId>hibernate-entitymanager</artifactId>
    		<version>5.1.0.Final</version>
    		<scope>provided</scope> <!-- facultatif car compile par défault -->
		</dependency>
		
		<dependency>
	  		<groupId>javax.servlet</groupId>
	 		<artifactId>javax.servlet-api</artifactId>
	  		<version>3.1.0</version>
	  		<scope>provided</scope>
		</dependency>
		
		<dependency>
		    <groupId>jstl</groupId>
		    <artifactId>jstl</artifactId>
		    <version>1.2</version>
		</dependency>
		
		<dependency>
		   <groupId>javax.enterprise</groupId>
		   <artifactId>cdi-api</artifactId>
		   <version>1.2</version>
		</dependency>
		
		<dependency>
		   <groupId>javax</groupId>
		   <artifactId>javaee-api</artifactId>
		   <version>7.0</version>
		   <scope>provided</scope>
		</dependency>
		
		<dependency>
		    <groupId>org.springframework</groupId>
		    <artifactId>spring-framework-bom</artifactId>
		    <version>4.2.6.RELEASE</version>
		    <type>pom</type>
		    <scope>import</scope>               
		</dependency>
		
		<dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-collections4</artifactId>
            <version>4.1</version>
         </dependency>
         
         <dependency>
		   <groupId>org.springframework.data</groupId>
		   <artifactId>spring-data-jpa</artifactId>
		   <version>1.10.3.RELEASE</version>
		</dependency>
		
		<dependency>
		    <groupId>com.fasterxml.jackson.core</groupId>
		    <artifactId>jackson-databind</artifactId>
		    <version>2.8.3</version>
		</dependency>
			
	</dependencies>
	
  </dependencyManagement>
  
  <build>
        <pluginManagement>
            <plugins>
                <plugin>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <configuration>
                        <source>1.8</source>
                        <target>1.8</target>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-jar-plugin</artifactId>
                    <version>2.4</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-shade-plugin</artifactId>
                    <version>${shade}</version>
                </plugin>
                <!-- pour dir que le fait d'enlever le pom.xml ça fait rien ...éviter de planter -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-war-plugin</artifactId>
                    <configuration>
                        <failOnMissingWebXml>false</failOnMissingWebXml>
                    </configuration>
                </plugin>
            </plugins>
        </pluginManagement>
        
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-source-plugin</artifactId>
                <version>3.0.1</version>
                <executions>
                    <execution>
                        <id>attach-sources</id>
                        <phase>package</phase>
                        <goals>
                            <goal>jar-no-fork</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>

    </build>
  
</project>